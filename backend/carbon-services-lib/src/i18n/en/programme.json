{
    "authoriseProgrammeSuccess": "The programme has been authorised successfully",
    "authoriseAlreadyAuthorisedProg": "This programme has already been auhtorised",
    "rejectProgrammeSuccess": "The programme has been rejected successfully",
    "rejectAlreadyRejectedProg": "This programme has already been rejected",
    "programmeExistsWithSameExetrnalId": "Programme already exist with the given externalId",
    "transferRequestALreadyProcessed": "Programme transfer request already processed",
    "programmeNotExist": "Programme does not exist",
    "noMitigationActionFound": "Mitigation action does not exist",
    "mitigationActionAlreadyExist": "Mitigation action already exist",
    "programmeNotExistWIthId": "Programme does not exist {}",
    "companyIsNotOwnerOfProgramme": "Company {} does not own the programme",
    "companyHaveNoEnoughCredits": "Company {} does not have enough credits",
    "alreadyCertified": "This programme has already been certified",
    "onlyCertifierCanIssuedProgramme": "Can certify only issued programmes",
    "notCertifiedByCertifier": "Certifier does not certified the programme",
    "failedToUpdate": "Programme failed to update",
    "doesNotOwnByCompany": "Programme does not own by the company",
    "noOwnershipPercForCompany": "Not ownership percentage for the company",
    "overallCreditNotFoundforCountryCode": "Overall credit does not found for the country code {}",
    "unExpectedProgOwnerPerc": "Unexpected programme owner percentages",
    "notImplementedForMitigationType": "Not implemented for mitigation type {}",
    "transferReqNotExist": "Transfer request does not exist",
    "acceptOrRejCancelledReq": "This investment request has been cancelled",
    "invalidApproverForTransferReq": "Invalid approver for the transfer request",
    "invalidApproverForRetirementReq": "Invalid approver for the retirement request",
    "noPendReqFound": "This transfer request has been cancelled",
    "transferAlreadyApproved": "This transfer request has already been accepted",
    "receiveCompanySuspended": "Receive company suspended",
    "cerditSendingCompSuspended": "Credit sending company suspended",
    "noPendingTransferReq": "This transfer request has been cancelled",
    "internalErrorStatusUpdating": "Internal error on status updating",
    "transferReqAlreadyProcessed": "This transfer request has already been cancelled",
    "transferReqNotExistinGiv": "Transfer request does not exist in the giv",
    "totalAmount>0": "Total Amount should be greater than 0",
    "companyCreditNeedsToDefineForMultipleComp": "Company credit needs to define for multiple companies",
    "invalidCompCreditForGivenComp": "Invalid company credit for given companies",
    "invalidCompCreditFromGivenComp": "Invalid company credit for given from companies",
    "cantTransferCreditWithinSameComp": "Cannot transfer ownership within the same company",
    "programmeNotInCreditIssuedState": "Programme is not in credit issued state",
    "cantInitiateTransferForOtherComp": "Cannot initiate investments for other companies",
    "fromCompInReqIsNotOwnerOfProgramme": "From company mentioned in the request does not own the programme",
    "companyHaveNoEnoughBalanceForTransfer": "Company {} does not have enough balance for the transfer. Available: {}",
    "proponentPercMustDefinedForEvryProponentTaxId": "Proponent percentage must defined for each proponent tax id",
    "proponentPercAndTaxIdsNotMatched": "Proponent percentage and number of tax ids does not match",
    "proponentPercSum=100": "Proponent percentage sum must be equals to 100",
    "duplicatedProponentTaxIds": "Proponent tax id cannot be duplicated",
    "proponentTaxIdNotInSystem": "Proponent tax id does not exist in the system",
    "proponentIsNotAProgrammeDev": "Proponent is not a programme developer",
    "noEnoughCreditsToCreateProgramme": "Not enough credits to create the programme",
    "noDiffInConfigFromThePrevVersion": "Not difference in the config from the previous version",
    "certifyPendingProgramme": "The programme has been certified successfully",
    "certifyRejectedProgramme": "This action is unauthorised",
    "certifyProgrammeAlreadyCertifiedBySameCertifier": "This programme has already been certified",
    "unAuthorizedCertification": "This action is unauthorised",
    "certificationRevocation": "The certificate has been revoked successfully",
    "certifierOrGovCanOnlyPerformCertificationRevoke": "Programme certification revoke can perform only by certifier or government",
    "certifierIdRequiredForGov": "CertifierId required for government user",
    "govOrProgrammeOwnerCanInitiateCreditRetirement": "Credit retirement can be initiated only by the government or programme owner",
    "reqNotIncludedInFromCompanyId": "Requester does not included in the from company id",
    "notAllowedToRetireOtherCompCredits": "Does not allow to retire other company credits",
    "programmeDevAllowedInitiateOnlyCrossBorderTransfer": "Programme developer allowed to initiate only cross border transfers",
    "retireReqFromCOmpOwnTheProgramme": "Retire request from company does own the programme",
    "requiredToRetireFullCreditAmountForGivenRetirementType": "Required to retire the full credit amount for the given retirement type",
    "notInAUthorizedState": "Programme is not in authorised state",
    "issuedCreditAmountcantExceedPendingCredit": "Programme issued credit amount can not exceed pending credit amount",
    "notFOundAPendingProgrammeForTheId": "Does not found a pending programme for the given programme id {}",
    "notInPendingState": "This programme has already been authorised",
    "issuedCreditCantExceedEstCredit": "Programme issued credit amount can not exceed estimated credit amount",
    "transferReqRejectSuccess": "The transfer request has been rejected successfully",
    "transferReqCancelSuccess": "The international transfer retire request has been cancelled successfully",
    "transferCancelSuccess": "The transfer request has been cancelled successfully",
    "certifierCanOnlyCertifiy": "Programme certification can perform only by certifier",
    "govOrProgrammeOwnerOnlyCreditRetirement": "Credit retirement can initiate only the government or programme owner",
    "issuedCreditCannotExceedEstCredit": "Programme issue credit amount can not exceed estimated credit amount",
    "organisationDeactivated": "This action is unauthorised due to the deactivation of your organisation. You will now be logged out of the system. Log in again to access the system with view-only permissions.",
    "unAuth": "This action is unauthorised",
    "companyIsNotTheOwnerOfProg": "Company {} is not an owner company of the programme",
    "internalErrorCreditFreezing": "Internal error on credit freezing",
    "actionSuccessful": "Action Successfully executed",
    "percentage>0": "Percentages should be greater than 0",
    "documentAlreadyAccepted": "Document already accepted",
    "documentNotExist": "Document does not exist",
    "invalidDocumentUpload": "Invalid document upload",
    "docUploadFailed": "Resource upload failed",
    "investmentReqDoesNotExist": "Investment request does not exist",
    "invalidApproverForInvestmentReq": "Invalid approver for the investment request",
    "investmentAlreadyApproved": "This investment request has already been accepted",
    "investmentReqNotExistinGiv": "Investment request does not exist in the given values",
    "percentagesNeedsToDefineForMultipleComp": "Percentages needs to define for multiple companies",
    "invalidCompPercentageForGivenComp": "Invalid company percentages for given companies",
    "investmentReqRejectSuccess": "The investment request has been rejected successfully",
    "investmentCancelSuccess": "The investment request has been cancelled successfully",
    "totalUserEstimateCreditsInvalidMsg": "Total user estimated credits cannot be greater than the programme estimated credits",
    "wrongSectorAndScopeMapping": "The sectoral scope doesn't match the sector",
    "wrongMItigationSectorMapping": "The Mitigation type doesn't match the sector. The correct mapping is Energy - Biomass energy, Coal bed/mine methane, EE households, EE industry, EE own generation, EE service, EE supply side, Energy distribution, Fossil fuel switch, Geothermal, Hydro, Solar, Wind Health - none Education - none Transport - Transport Manufacturing -Cement, CCS, HFCs, PFCs, SF6 Hospitality - none Forestry - Forestry Waste - Landfills, Fugitive, Methane avoidance  Agriculture - Agriculture Other - Marine, N2O",
    "govermentOwnershipOfProgramme":"Goverment should be a programme owner.",
    "proponentIsNotAProgrammeDevOrGov": "Proponent is not a programme developer or government"
  }